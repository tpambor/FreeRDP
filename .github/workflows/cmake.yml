name: Build
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      CFLAGS: --coverage
      CXXFLAGS: --coverage
    steps:
      - name: Setup environment
        run: sudo apt update && sudo apt install -y --no-install-recommends ca-certificates cmake git ninja-build g++ pkgconf xsltproc docbook-xsl libusb-1.0-0-dev libfuse3-dev libcjson-dev libsdl2-dev libsdl2-ttf-dev libsystemd-dev libx11-dev libicu-dev libwayland-dev libxkbcommon-dev zlib1g-dev libssl-dev libasound2-dev libpulse-dev libcups2-dev libpcsclite-dev libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libpostproc-dev libswresample-dev libswscale-dev libpkcs11-helper1-dev krb5-multidev heimdal-multidev
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' 
          java-version: '17'
      - name: Set up Python 3.8 for gcovr
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: install gcovr 5.0
        run: |
          pip install gcovr==5.0 # 5.1 is not supported
      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v3
      - name: Run build-wrapper
        run: |
          mkdir build
          cmake -S . -B build -G Ninja -DBUILD_TESTING=ON -DCMAKE_SKIP_INSTALL_ALL_DEPENDENCY=ON
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Release
      - name: Run tests to generate coverage statistics
        working-directory: build
        run: ctest .
      - name: Get coverage
        working-directory: build
        run: ctest -T coverage .
      - name: Collect coverage into one XML report
        working-directory: build
        run: |
          gcovr --sonarqube > coverage.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
        run: |
          sonar-scanner -X \
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json" \
            --define sonar.coverageReportPaths=build/coverage.xml \
            --define sonar.scanner.skipJreProvisioning=true
